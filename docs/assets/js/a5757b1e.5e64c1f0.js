"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1460],{3905:function(e,t,n){n.d(t,{Zo:function(){return k},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},k=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),s=m(n),d=i,c=s["".concat(o,".").concat(d)]||s[d]||u[d]||r;return n?a.createElement(c,l(l({ref:t},k),{},{components:n})):a.createElement(c,l({ref:t},k))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=s;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:i,l[1]=p;for(var m=2;m<r;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},1232:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return k},metadata:function(){return s},toc:function(){return c}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],p={toc:[{value:"Installation of <strong>DiffKt</strong> on Ubuntu 20.04",id:"installation-of-diffkt-on-ubuntu-2004",level:3}]};function o(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"installation-of-diffkt-on-ubuntu-2004"},"Installation of ",(0,r.kt)("strong",{parentName:"h3"},"DiffKt")," on Ubuntu 20.04"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"On Ubuntu install C++ tools,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sudo apt-get install build-essential libssl-dev"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install CMAKE,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sudo snap install cmake -classic"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'Install JDK 11. If not installed, download "Oracle Java 11 JDK".')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure that ",(0,r.kt)("inlineCode",{parentName:"p"},"JAVA_HOME")," is set to the JDK 11 directory.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure your alternatives for java and javac point to the Oracle Java 11 JDK.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"$JAVA_HOME/bin")," to your ",(0,r.kt)("inlineCode",{parentName:"p"},"PATH")," in ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc"),","),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"export PATH = ${PATH}:$JAVA_HOME/bin"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the following environmental variables:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"export JAVA_INCLUDE_PATH=$JAVA_HOME/include/")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"export JAVA_INCLUDE_PATH2=$JAVA_HOME/include/linux/")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"export JAVA_AWT_INCLUDE_PATH=$JAVA_HOME/include/"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update your environment,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"source .bashrc"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install IntelliJ IDEA,"),(0,r.kt)("p",{parentName:"li"},"a) install Python plugin,"),(0,r.kt)("p",{parentName:"li"},"b) install Kotlin plugin,"),(0,r.kt)("p",{parentName:"li"},"c) install Kotlin Notebook plugin,"),(0,r.kt)("p",{parentName:"li"},"d) configure Kotlin Notebook plugin.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install CUDA 11.? from NVIDIA (should work with the most current version, if not 11.1),"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"https://developer.nvidia.com/cuda-downloads"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install cuDNN from NVDIA,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"https://developer.nvidia.com/rdp/cudnn-download"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install OpenBlas,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sudo apt-get install libopenblas-dev"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a github account if you do not have one.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Setup your github account to use ssh.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Setup your github account to use a token.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install github tools,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sudo apt-get install gh"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the token into github tools.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Fork facebookresearch/diffkt to you github account.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Clone the fork to your local computer."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"gh repo clone {github-id}/diffkt"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Check your local ",(0,r.kt)("strong",{parentName:"p"},"DiffKt")," project to see if the original facebookresearch/diffkt.git is upstream,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cd {your git projects}/diffkt")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"git remote -v")),(0,r.kt)("p",{parentName:"li"},"You should see"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"origin\tgit@github.com:{gethub id}/diffkt.git (fetch)")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"origin\tgit@github.com:{gethub id}/diffkt.git (push)")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"upstream\tgit@github.com:facebookresearch/diffkt.git (fetch)")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"upstream\tgit@github.com:facebookresearch/diffkt.git (push)")),(0,r.kt)("p",{parentName:"li"},"If you are missing upstream, execute the following.\t"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"git remote add upstream git@github.com:facebookresearch/diffkt.git"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Read the github docs for merging your local repository with upstream,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In general, pull from upstream and merge, but checkin to origin (your fork) and do a pull request to merge with upstream,")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cd {you project}/diffkt/cpp/ops"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Read the README.md,")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install OpenMP,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sudo apt install libomp-dev")),(0,r.kt)("p",{parentName:"li"},"and/or"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sudo apt-get install libgomp1"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install Eigen,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sudo apt-get install libeigen3-dev"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install the Intel oneAPI Base Toolkit.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the proper oneAPI libraries to link. ",(0,r.kt)("strong",{parentName:"p"},"DiffKt")," uses version 2.1.0, which is different from the Base Toolkit,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cd {your projects}diffkt/cpp/ops")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"wget $(fwdproxy-config wget) https://github.com/oneapi-src/oneDNN/releases/download/v2.1/dnnl_lnx_2.1.0_cpu_gomp.tgz")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"tar -zxvf dnnl_lnx_2.1.0_cpu_gomp.tgz")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"mv dnnl_lnx_2.1.0_cpu_gomp dnnl"),"\t")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"mkdir build"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cd build"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cmake .."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"make VERBOSE=1"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If make completed without error, then the ops directory should be built and installed as the following: "),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{your projects}/diffkt/kotlin/api/src/main/resources/libdnnlops_jni.so")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{your projects}/diffkt/kotlin/api/src/main/resources/libops_jni.so")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{your projects}/diffkt/kotlin/api/src/main/resources/libsparseops_jni.so"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cd {your projects}/diffkt/cpp/gpuops"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Read the README.md.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"source /opt/intel/oneapi/setvars.sh")),(0,r.kt)("p",{parentName:"li"},"Note: You may have link issues with the Intel libraries. For a quick work around, create a\nsymbolic link in /usr/lib to the library that is not linking.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Install libtorch in the gpuops directory. .gitignore is set to ignore the directory,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"wget $(fwdproxy-config wget) https://download.pytorch.org/libtorch/lts/1.8/cu111/libtorch-cxx11-abi-shared-with-deps-1.8.2%2Bcu111.zip")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"unzip libtorch-cxx11-abi-shared-with-deps-1.8.2%2Bcu111.zip")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"rm libtorch-cxx11-abi-shared-with-deps-1.8.2%2Bcu111.zip"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"mkdir build"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cd build"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cmake .."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"make VERBOSE=1 -j"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If make completed without error, then the gpuops directory should be built and installed as the following,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"{your projects}/diffkt/kotlin/api/src/main/resources/libgnuops_jni.so"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make sure your default shell is bash and that sh links to bash.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"cd {your projects}/diffkt/kotlin"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Read the README.md.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'At GitHub make sure your token has "read:packages" scope.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"github.env")," with the following in it,"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"GITHUB_ACTOR={your username}")),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"GITHUB_TOKEN={your access token with the read:packages permission}"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Start intellij.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Open {you projects}/diffkt/kotlin"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Using Gradle, build the project."))))}o.isMDXComponent=!0;var m=["components"],k={id:"installation_ubuntu",title:"Installation on Ubuntu",slug:"/overview/installation_ubuntu"},u=void 0,s={unversionedId:"overview/installation_ubuntu/installation_ubuntu",id:"overview/installation_ubuntu/installation_ubuntu",title:"Installation on Ubuntu",description:"",source:"@site/docs/overview/installation_ubuntu/installation_ubuntu.mdx",sourceDirName:"overview/installation_ubuntu",slug:"/overview/installation_ubuntu",permalink:"/docs/overview/installation_ubuntu",draft:!1,tags:[],version:"current",frontMatter:{id:"installation_ubuntu",title:"Installation on Ubuntu",slug:"/overview/installation_ubuntu"},sidebar:"diffktSidebar",previous:{title:"Installation on Mac",permalink:"/docs/overview/installation_mac"},next:{title:"API",permalink:"/docs/framework/api"}},d={},c=[],N={toc:c};function f(e){var t=e.components,n=(0,i.Z)(e,m);return(0,r.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o,{mdxType:"README"}))}f.isMDXComponent=!0}}]);