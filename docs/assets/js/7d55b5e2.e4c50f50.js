"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[281],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,k=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(k,i(i({ref:t},u),{},{components:n})):r.createElement(k,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2698:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return k}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={toc:[{value:"Operating System Support",id:"operating-system-support",level:2},{value:"Issues",id:"issues",level:2},{value:"Pull Requests",id:"pull-requests",level:2},{value:"Deployment",id:"deployment",level:2},{value:"Contributor License Agreement (&quot;CLA&quot;)",id:"contributor-license-agreement-cla",level:3},{value:"License",id:"license",level:2}]};function s(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contributing-to-diffkt"},"Contributing to DiffKt"),(0,a.kt)("p",null,"We welcome and greatly value all kinds of contributions to DiffKt. You can contribute in several ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Opening issues"),(0,a.kt)("li",{parentName:"ul"},"Contributing to the library code base"),(0,a.kt)("li",{parentName:"ul"},"Contributing examples"),(0,a.kt)("li",{parentName:"ul"},"Adding documentation")),(0,a.kt)("p",null,"For contributions to ShapeKt, please visit the ",(0,a.kt)("inlineCode",{parentName:"p"},"shapekt")," repository ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/facebookresearch/shapekt"},"here"),"."),(0,a.kt)("h2",{id:"operating-system-support"},"Operating System Support"),(0,a.kt)("p",null,"Currently DiffKt build is supported on macOS as well as Ubuntu. Help is needed to support building on Windows. "),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/facebookresearch/diffkt/blob/main/INSTALL_MAC.md"},"Install on Mac")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/facebookresearch/diffkt/blob/main/INSTALL_UBUNTU.md"},"Install on Ubuntu")),(0,a.kt)("h2",{id:"issues"},"Issues"),(0,a.kt)("p",null,"If you encounter any issues, feel free to report it using GitHub issues. Please ensure your description is clear and has sufficient instructions to be able to reproduce the issue."),(0,a.kt)("h2",{id:"pull-requests"},"Pull Requests"),(0,a.kt)("p",null,"Please follow these practices when proposing code changes and creating pull requests. "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Fork the repo and create your branch from ",(0,a.kt)("inlineCode",{parentName:"li"},"main"),"."),(0,a.kt)("li",{parentName:"ol"},"If you've added code that should be tested, add tests."),(0,a.kt)("li",{parentName:"ol"},"If you've changed APIs, update the documentation."),(0,a.kt)("li",{parentName:"ol"},"Ensure the test suite passes."),(0,a.kt)("li",{parentName:"ol"},'If you haven\'t already, complete the Contributor License Agreement ("CLA").')),(0,a.kt)("h2",{id:"deployment"},"Deployment"),(0,a.kt)("p",null,"To deploy DiffKt to the Central Repository: "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create a Sontatype JIRA account at ",(0,a.kt)("inlineCode",{parentName:"p"},"issues.sontatype.org")," ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"File an issue to get rights to push to ",(0,a.kt)("inlineCode",{parentName:"p"},"com.facebook"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install ",(0,a.kt)("a",{parentName:"p",href:"https://gnupg.org"},"GnuPG")," and generate GPG keys "),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"On MacOS it is recommended to use Homebrew: ",(0,a.kt)("inlineCode",{parentName:"li"},"brew install gnupg")," "),(0,a.kt)("li",{parentName:"ol"},"Generate a key pair, provide a passphrase when prompted: ",(0,a.kt)("inlineCode",{parentName:"li"},"gpg --gen-key")," "),(0,a.kt)("li",{parentName:"ol"},"List the key pairs and note the last 8 characters of the 40-character key ID string: ",(0,a.kt)("inlineCode",{parentName:"li"},"gpg --list-keys")),(0,a.kt)("li",{parentName:"ol"},"Move into the  ",(0,a.kt)("em",{parentName:"li"},".gnugpg")," directory: ",(0,a.kt)("inlineCode",{parentName:"li"},"cd ./.gnugpg")),(0,a.kt)("li",{parentName:"ol"},"Export the secret key: ",(0,a.kt)("inlineCode",{parentName:"li"},"gpg --keyring secring.gpg --export-secret-keys > ~/.gnupg/")),(0,a.kt)("li",{parentName:"ol"},"Send the public key to the Ubuntu server, replace the ",(0,a.kt)("inlineCode",{parentName:"li"},"XXXXXXXXX")," placeholder with the key ID or last 8 characters of the key ID: ",(0,a.kt)("inlineCode",{parentName:"li"},"gpg --send-keys --keyserver keyserver.ubuntu.com XXXXXXXXX"),"     "))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In your personal ",(0,a.kt)("em",{parentName:"p"},".gradle")," directory outside the project (often in directory like ",(0,a.kt)("em",{parentName:"p"},"/Users/thomasnield/.gradle/"),") create a ",(0,a.kt)("em",{parentName:"p"},"gradle.properties")," file and add the following contents to it. Be sure to provide the following information and change the ",(0,a.kt)("em",{parentName:"p"},"signing.secretKeyRingFile")," file to your ",(0,a.kt)("em",{parentName:"p"},"securing.gpg")," file path. "))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"repositoryUsername=[your Sonatype JIRA username]\nrepositoryPassword=[your Sonatype JIRA password]\nsigning.keyId=[last 8 characters of the key ID]\nsigning.password=[your passphrase for the key]\nsigning.secretKeyRingFile=/Users/thomasnield/.gnupg/secring.gpg\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"In the ",(0,a.kt)("em",{parentName:"li"},"diffkt/kotlin/api/build.gradle.kts")," script, change the release version. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'pom { \n...\n     version = "X.X.X"\n...\n}\n')),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},"In the ",(0,a.kt)("em",{parentName:"li"},"diffkt/kotlin/api")," directory run the publish command: ",(0,a.kt)("inlineCode",{parentName:"li"}," ./gradlew clean publish")),(0,a.kt)("li",{parentName:"ol"},"Upon success, log into ",(0,a.kt)("a",{parentName:"li",href:"https://oss.sonatype.org/#stagingRepositories"},"Staged Repositories"),' with your Sonatype JIRA account, select the artifact you just uploaded, close it, wait a few minutes for it to process, refresh, and then click "Release."'),(0,a.kt)("li",{parentName:"ol"},"Within an hour the artifact release should be visible in ",(0,a.kt)("a",{parentName:"li",href:"https://repo1.maven.org/maven2/com/facebook/diffkt/"},"the repository"),". ")),(0,a.kt)("h3",{id:"contributor-license-agreement-cla"},'Contributor License Agreement ("CLA")'),(0,a.kt)("p",null,"In order to accept your pull request, we need you to submit a CLA. You only need to do this once to work on any of Meta\u2019s open source projects."),(0,a.kt)("p",null,"Complete your CLA here: ",(0,a.kt)("a",{parentName:"p",href:"https://code.facebook.com/cla"},"https://code.facebook.com/cla")),(0,a.kt)("h2",{id:"license"},"License"),(0,a.kt)("p",null,"By contributing to DiffKt, you agree that your contributions will be licensed as described in the LICENSE file in the root directory of this source tree."))}s.isMDXComponent=!0;var p=["components"],u={id:"contribute",title:"Contributing to DiffKt",slug:"/examples/contribute"},c=void 0,m={unversionedId:"contribute/contribute",id:"contribute/contribute",title:"Contributing to DiffKt",description:"",source:"@site/docs/contribute/contribute.md",sourceDirName:"contribute",slug:"/examples/contribute",permalink:"/docs/examples/contribute",draft:!1,tags:[],version:"current",frontMatter:{id:"contribute",title:"Contributing to DiffKt",slug:"/examples/contribute"},sidebar:"diffktSidebar",previous:{title:"Vector2",permalink:"/docs/examples/vector2"}},d={},k=[],f={toc:k};function g(e){var t=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s,{mdxType:"README"}))}g.isMDXComponent=!0}}]);